---
kind: pipeline
name: default
type: kubernetes

steps:

  - name: unit_test
    pull: if-not-exists
    image: node
    environment:
      NOTIFY_KEY: USE_MOCK
    commands:
      - npm install
      - npm test
    when:
      branch: [ master, development ]
      event: push

  - name: build
    image: docker:dind
    commands:
      # wait for docker service to be up before running docker build
      - n=0; while [ "$n" -lt 60 ] && [ ! -e /var/run/docker.sock ]; do n=$(( n + 1 )); sleep 1; done
      - docker build -t sas/refugee-integration-loans:$${DRONE_COMMIT_SHA} .
    volumes:
      - name: dockersock
        path: /var/run
    when:
      branch: [ master, development ]
      event: push

  - name: scan
    image: docker.digital.homeoffice.gov.uk/acp-anchore-submission:latest
    environment:
      IMAGE_NAME: sas/refugee-integration-loans:${DRONE_COMMIT_SHA}
      SERVICE_URL: http://anchore-submission-server:10080
      LOCAL_IMAGE: true
      TOLERATE: medium
      #whitelist: CVE_SOMENAME_1,CVE_SOMENAME_2
      #whitelist_file: <PATH>
      SHOW_ALL_VULNERABILITIES: true
      FAIL_ON_DETECTION: false
    when:
      branch: [ master, development ]
      event: push

  - name: create_artefact
    image: plugins/ecr
    settings:
      access_key:
        from_secret: aws_access_key_id
      secret_key:
        from_secret: aws_secret_access_key
      region: eu-west-2
      repo: sas/refugee-integration-loans
      registry: 340268328991.dkr.ecr.eu-west-2.amazonaws.com
      tags:
        - latest_${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA}
    when:
      branch: [ master, development ]
      event: push

  - name: deploy_to_dev
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd:v1.14.0
    environment:
      KUBE_NAMESPACE: sas-ril-dev
      KUBE_SERVER: https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
      KUBE_TOKEN_RIL_ACP_NOTPROD:
        from_secret: kube_token_ril_acp_notprod
    commands:
      - export KUBE_TOKEN=$${KUBE_TOKEN_RIL_ACP_NOTPROD}
      - kd --insecure-skip-tls-verify --check-interval 10s -f kube/redis-service.yml -f kube/redis-network-policy.yml -f kube/redis-deployment.yml
      - kd --insecure-skip-tls-verify -f kube/dev/configmap.yaml -f kube/dev/ingress-internal.yaml -f kube/networkpolicy-internal.yaml -f kube/service.yaml
      - kd --insecure-skip-tls-verify --timeout 10m --check-interval 10s -f kube/dev/deployment.yaml
    when:
      branch: master
      event: push

  - name: deploy_to_branch
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd:v1.14.0
    environment:
      KUBE_NAMESPACE: sas-ril-branch
      KUBE_SERVER: https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
      KUBE_TOKEN_RIL_ACP_NOTPROD:
        from_secret: kube_token_ril_acp_notprod
    commands:
      - export KUBE_TOKEN=$${KUBE_TOKEN_RIL_ACP_NOTPROD}
      - kd --insecure-skip-tls-verify --check-interval 10s -f kube/redis-service.yml -f kube/redis-network-policy.yml -f kube/redis-deployment.yml
      - kd --insecure-skip-tls-verify -f kube/branch/configmap.yaml -f kube/branch/ingress-internal.yaml -f kube/networkpolicy-internal.yaml -f kube/service.yaml
      - kd --insecure-skip-tls-verify --timeout 10m --check-interval 10s -f kube/branch/deployment.yaml
    when:
      branch: development
      event: push

  - name: deploy_to_uat
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd:v1.14.0
    environment:
      KUBE_NAMESPACE: sas-ril-uat
      KUBE_SERVER: https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
      KUBE_TOKEN_RIL_ACP_NOTPROD:
        from_secret: kube_token_ril_acp_notprod
    commands:
      - export KUBE_TOKEN=$${KUBE_TOKEN_RIL_ACP_NOTPROD}
      - kd --insecure-skip-tls-verify --check-interval 10s -f kube/redis-service.yml -f kube/redis-network-policy.yml -f kube/redis-deployment.yml
      - kd --insecure-skip-tls-verify -f kube/uat/configmap.yaml -f kube/uat/ingress-internal.yaml -f kube/networkpolicy-internal.yaml -f kube/service.yaml
      - kd --insecure-skip-tls-verify --timeout 10m --check-interval 10s -f kube/uat/deployment.yaml
    when:
      event: promote
      target: UAT

  - name: deploy_to_stg
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd:v1.14.0
    environment:
      KUBE_NAMESPACE: sas-ril-stg
      KUBE_SERVER: https://kube-api-prod.prod.acp.homeoffice.gov.uk
      KUBE_TOKEN_RIL_ACP_PROD:
        from_secret: kube_token_ril_acp_prod
    commands:
      - export KUBE_TOKEN=$${KUBE_TOKEN_RIL_ACP_PROD}
      - kd --insecure-skip-tls-verify --check-interval 10s -f kube/redis-service.yml -f kube/redis-network-policy.yml -f kube/redis-deployment.yml
      - kd --insecure-skip-tls-verify -f kube/stg/configmap.yaml -f kube/stg/ingress-internal.yaml -f kube/networkpolicy-internal.yaml -f kube/service.yaml
      - kd --insecure-skip-tls-verify --timeout 10m --check-interval 10s -f kube/stg/deployment.yaml
    when:
      event: promote
      target: STG

  - name: deploy_to_prod
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd:v1.14.0
    environment:
      KUBE_NAMESPACE: sas-ril-prod
      KUBE_SERVER: https://kube-api-prod.prod.acp.homeoffice.gov.uk
      KUBE_TOKEN_RIL_ACP_PROD:
        from_secret: kube_token_ril_acp_prod
    commands:
      - export KUBE_TOKEN=$${KUBE_TOKEN_RIL_ACP_PROD}
      - kd --insecure-skip-tls-verify --check-interval 10s -f kube/redis-service.yml -f kube/redis-network-policy.yml -f kube/redis-deployment.yml
      - kd --insecure-skip-tls-verify -f kube/prod/configmap.yaml -f kube/prod/ingress-external.yaml -f kube/networkpolicy-external.yaml -f kube/service.yaml
      - kd --insecure-skip-tls-verify --timeout 10m --check-interval 10s -f kube/prod/deployment.yaml
    when:
      event: promote
      target: PROD

  - name: manual_deploy_to_branch
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd:v1.14.0
    environment:
      KUBE_NAMESPACE: sas-ril-branch
      KUBE_SERVER: https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
      KUBE_TOKEN_RIL_ACP_NOTPROD:
        from_secret: kube_token_ril_acp_notprod
    commands:
      - export KUBE_TOKEN=$${KUBE_TOKEN_RIL_ACP_NOTPROD}
      - kd --insecure-skip-tls-verify --check-interval 10s -f kube/redis-service.yml -f kube/redis-network-policy.yml -f kube/redis-deployment.yml
      - kd --insecure-skip-tls-verify -f kube/branch/configmap.yaml -f kube/branch/ingress-internal.yaml -f kube/networkpolicy-internal.yaml -f kube/service.yaml
      - kd --insecure-skip-tls-verify --timeout 10m --check-interval 10s -f kube/branch/deployment.yaml
    when:
      event: promote
      target: BRANCH

  - name: sonar-scanner
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/sonar-scanner-node:latest
    settings:
      failure: ignore
    when:
      branch: master
      event: push

  - name: notify_slack_build
    pull: if-not-exists
    image: plugins/slack
    settings:
      channel: sas-build
      failure: ignore
      icon_url: http://readme.drone.io/0.5/logo_dark.svg
      icon.url: http://readme.drone.io/0.5/logo_dark.svg
      template: "BUILD on {{build.event}} of RIL - {{build.branch}} has {{build.status}} - <{{build.link}}|#{{build.number}}> {{#success build.status}}\n  :thumbsup: :thumbsup: :thumbsup:\n{{else}}\n  :x: :x: :x:\n{{/success}} Author: {{build.author}}\n\nDuration: {{since job.started}}\\n\n\nJob: <{{build.link}}|#{{build.number}}>\\n\n\nCommit: {{build.commit}}\n"
      username: Drone
      webhook:
        from_secret: SLACK_WEBHOOK
    when:
      branch: master
      event: push
      status: [ success, failure ]

  - name: notify_slack_deploy
    pull: if-not-exists
    image: plugins/slack
    settings:
      channel: sas-build
      failure: ignore
      icon_url: http://readme.drone.io/0.5/logo_dark.svg
      icon.url: http://readme.drone.io/0.5/logo_dark.svg
      template: "DEPLOY to {{build.deployTo}} of RIL has {{build.status}} - <{{build.link}}|#{{build.number}}> {{#success build.status}}\n  :thumbsup: :thumbsup: :thumbsup:\n{{else}}\n  :x: :x: :x:\n{{/success}} Author: {{build.author}}\n\nDuration: {{since job.started}}\n\nJob: <{{build.link}}|#{{build.number}}>\n\nCommit: {{build.commit}}\n"
      username: Drone
      webook:
        from_secret: SLACK_WEBHOOK
    when:
      event: promote
      status: [ success, failure ]

services:
  - name: docker
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run

  - name: anchore-submission-server
    image: docker.digital.homeoffice.gov.uk/acp-anchore-submission:latest
    commands:
      - /anchore-submission server
    environment:
      ANCHORE_URL: "acp-anchore.acp.homeoffice.gov.uk"
      REGISTRY_URL: "acp-ephemeral-registry.acp.homeoffice.gov.uk"
    volumes:
      - name: dockersock
        path: /var/run

  - name: session
    image: redis
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}

...